function Apple.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push pointer 0
call Apple.draw 1
pop temp 0
push pointer 0
return
function Apple.getx 0
push argument 0
pop pointer 0
push this 0
return
function Apple.gety 0
push argument 0
pop pointer 0
push this 1
return
function Apple.choseNewLocation 0
push argument 0
pop pointer 0
push constant 16
push constant 30
call Random.randRange 1
call Math.multiply 2
pop this 0
push constant 16
push constant 14
call Random.randRange 1
call Math.multiply 2
pop this 1
push constant 0
return
function Apple.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Apple.draw 0
push argument 0
pop pointer 0
push this 1
push constant 16
call Math.divide 2
push this 0
push constant 16
call Math.divide 2
add
pop this 4
push constant 16384
push this 4
add
pop this 3
push this 3
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push this 3
push constant 32
add
push constant 8192
call Memory.poke 2
pop temp 0
push this 3
push constant 64
add
push constant 4108
call Memory.poke 2
pop temp 0
push this 3
push constant 96
add
push constant 2546
call Memory.poke 2
pop temp 0
push this 3
push constant 128
add
push constant 1570
call Memory.poke 2
pop temp 0
push this 3
push constant 160
add
push constant 2626
call Memory.poke 2
pop temp 0
push this 3
push constant 192
add
push constant 4482
call Memory.poke 2
pop temp 0
push this 3
push constant 224
add
push constant 8450
call Memory.poke 2
pop temp 0
push this 3
push constant 256
add
push constant 9730
call Memory.poke 2
pop temp 0
push this 3
push constant 288
add
push constant 22530
call Memory.poke 2
pop temp 0
push this 3
push constant 320
add
push constant 16388
call Memory.poke 2
pop temp 0
push this 3
push constant 352
add
push constant 16392
call Memory.poke 2
pop temp 0
push this 3
push constant 384
add
push constant 24584
call Memory.poke 2
pop temp 0
push this 3
push constant 416
add
push constant 8240
call Memory.poke 2
pop temp 0
push this 3
push constant 448
add
push constant 16352
call Memory.poke 2
pop temp 0
push this 3
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Apple.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Apple.incSize 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
push this 0
push this 2
add
push constant 510
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Apple.erase 1
pop temp 0
push this 2
push constant 2
add
pop this 2
push pointer 0
call Apple.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Apple.decSize 0
push argument 0
pop pointer 0
push this 2
push constant 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Apple.erase 1
pop temp 0
push this 2
push constant 2
sub
pop this 2
push pointer 0
call Apple.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Apple.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push this 2
sub
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Apple.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 240
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push this 2
add
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Apple.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 2
sub
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Apple.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 496
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 2
add
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
