很多高階語言的設定，當下不是很理解，

但如果放到組語的層面來看，就能理解，

以 陣列為例， 組語也只是知道，這個陣列的base address,

跟一個counter 的長度多少而已

pointer的話， 很簡單的定義，記憶體指向的值，不是真正要用的值，

這個值是address，指向真正要用的值。

一個陣列，就是一段連續的記憶體空間，要怎麼樣，對這空間做運算，

要一個word去存這array的起始位置，跟一個counter ，去存這個陣列的大小。

還有，word這個字，通常是用來形容，一個裝置的記憶體存取單位，

為什麼用word呢， 以我們這裡實作的Hack來看， 這裡的 word指的是16 bits，

不同的裝置，用的CPU bits數也不同，像現在的CPU就 有32 64 bits。

在組語中，程式的執行跳轉，是看symbol，


relocation:
這指的是，程式放到memory時，要重新定位，因為每次載入Memory，

都會有不同的base address， 但前提是，你組語中的變數，

要用symbol，也就是，不能指接指定memory的位置 ，

直接指定也是可以， 但會造成，後面的程式載入，變的沒有彈性。
